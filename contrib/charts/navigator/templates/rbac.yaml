{{- if .Values.rbac.enabled }}
apiVersion: v1
kind: List
items:

{{- if not .Values.apiserver.rbacDisabled }}
### API Server ###
# TODO: if this is just for namespace lifecycle admission, move to a generic role
# the role for the apiserver
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    name: "{{ template "fullname" . }}:apiserver"
  # this rule defined on the role for specifically the
  # namespace-lifecycle admission-controller
  rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs:     ["get", "list", "watch"]
# API-server service-account gets its own role
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    name: "{{ template "fullname" . }}:apiserver"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: "{{ template "fullname" . }}:apiserver"
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
{{- if .Values.apiserver.serviceAccount }}
    name: "{{ .Values.apiserver.serviceAccount }}"
{{- else }}
    name: "{{ template "fullname" . }}-apiserver"
{{- end }}
    namespace: "{{ .Release.Namespace }}"
# apiserver gets the auth-delegator role to delegate auth decisions to
# the core apiserver
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    name: "{{ template "fullname" . }}:apiserver-auth-delegator"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:auth-delegator
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
{{- if .Values.apiserver.serviceAccount }}
    name: "{{ .Values.apiserver.serviceAccount }}"
{{- else }}
    name: "{{ template "fullname" . }}-apiserver"
{{- end }}
    namespace: "{{ .Release.Namespace }}"
# apiserver gets the ability to read authentication. This allows it to
# read the specific configmap that has the requestheader-* entries to
# enable api aggregation
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    name: "{{ template "fullname" . }}:apiserver-authentication-reader"
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
{{- if .Values.apiserver.serviceAccount }}
    name: "{{ .Values.apiserver.serviceAccount }}"
{{- else }}
    name: "{{ template "fullname" . }}-apiserver"
{{- end }}
    namespace: "{{ .Release.Namespace }}"
{{- end }}
### Controller ###
- apiVersion: rbac.authorization.k8s.io/v1beta1
{{- if not .Values.controller.namespace }}
  kind: ClusterRole
{{- else }}
  kind: Role
{{- end }}
  metadata:
    name: "{{ template "fullname" . }}:controller"
  rules:
  - apiGroups: ["navigator.jetstack.io"]
    resources: ["elasticsearchclusters", "pilots", "elasticsearchclusters/status", "pilots/status", "cassandraclusters", "cassandraclusters/status"]
    verbs:     ["*"]
  - apiGroups: [""]
    resources: ["services", "configmaps", "serviceaccounts", "pods"]
    verbs:     ["get", "list", "watch", "update", "create", "delete", "patch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs:     ["get", "list", "watch", "update", "create", "delete", "patch"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs:     ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs:     ["*"]
    resourceNames: ["navigator-controller"]
  - apiGroups: [""]
    resources: ["events"]
    verbs:     ["create", "update", "patch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings", "roles"]
    verbs:     ["*"]

- apiVersion: rbac.authorization.k8s.io/v1beta1
{{- if not .Values.controller.namespace }}
  kind: ClusterRoleBinding
{{- else }}
  kind: RoleBinding
{{- end }}
  metadata:
    name: "{{ template "fullname" . }}:controller"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
{{- if not .Values.controller.namespace }}
    kind: ClusterRole
{{- else }}
    kind: Role
{{- end }}
    name: "{{ template "fullname" . }}:controller"
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
{{- if .Values.controller.serviceAccount }}
    name: "{{ .Values.controller.serviceAccount }}"
{{- else }}
    name: "{{ template "fullname" . }}-controller"
{{- end }}
    namespace: "{{ .Release.Namespace }}"

{{- end }}
